sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
mle=as.matrix(t.j[j,]*s.j[j,])
b=barplot(mle,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(mle)-0.05),(max(mle)+0.10)),cex.names=0.5,ylab="PosteriorMean")
plot.func.t=function(j,posterior.means,lfsr.mat,marginal.var,s.j){
genesnpnames=rownames(posterior.means)
tissue.names=colnames(posterior.means)
R=ncol(posterior.means)
posterior.means=as.matrix(posterior.means)
s.j=as.matrix(s.j)
col.mat=NULL
for(r in 1:R){
if (lfsr.mat[j,r]<=0.10) {
col.mat[r]=1
} else if (lfsr.mat[j,r]<0.5) {
col.mat[r]=2
} else if (lfsr.mat[j,r]>=0.50) {
col.mat[r]=3
}
}
post.mean.converted=posterior.means[j,]*s.j[j,]
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
lfsr=lfsr.mat[j,]
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
mle=as.matrix(t.j[j,]*s.j[j,])
b=barplot(mle,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(mle)-0.05),(max(mle)+0.10)),cex.names=0.5,ylab="PosteriorMean")
}
plot.func.t(j = 100,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j = s.j)
plot.func.t=function(j,posterior.means,lfsr.mat,marginal.var,s.j){
genesnpnames=rownames(posterior.means)
tissue.names=colnames(posterior.means)
R=ncol(posterior.means)
posterior.means=as.matrix(posterior.means)
s.j=as.matrix(s.j)
col.mat=NULL
for(r in 1:R){
if (lfsr.mat[j,r]<=0.10) {
col.mat[r]=1
} else if (lfsr.mat[j,r]<0.5) {
col.mat[r]=2
} else if (lfsr.mat[j,r]>=0.50) {
col.mat[r]=3
}
}
post.mean.converted=posterior.means[j,]*s.j[j,]
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
lfsr=lfsr.mat[j,]
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
mle=as.matrix(t.j[j,]*s.j[j,])
b=barplot(mle,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(mle)-0.05),(max(mle)+0.10)),cex.names=0.5,ylab="PosteriorMean")
}
col.mat=NULL
for(r in 1:R){
if (lfsr.mat[j,r]<=0.10) {
col.mat[r]=1
} else if (lfsr.mat[j,r]<0.5) {
col.mat[r]=2
} else if (lfsr.mat[j,r]>=0.50) {
col.mat[r]=3
}
}
R
col.mat
dim(lfsr)
lfsr = read.table("lfsr.et_withbma.txt")
post.means=read.table("post.mean.et_withbma.txt")
se.gp.hat=na.omit(read.table("max_sebeta_eQTL.table.txt"))[,-c(1)]
s.j=se.gp.hat[,-1]#remove genesnpnames
t.stat=na.omit(read.table("max_tscore_eQTL.table.txt"))[,-c(1,47)]
t.j=t.stat[,-1]
marginal.var=read.table("../ET_model_stronggenesnps/marginal.var.et_withbma.txt")
plot.func.t(j = 100,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j = s.j)
plot.func.t(j = 100,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j = s.j)
mle=as.matrix(t.j[j,]*s.j[j,])
head(t.j)
mle
b.gp.hat=na.omit(read.table("~/Dropbox/AllGeneSNPStuff/max_beta_eQTL.table.txt"))[-,c(1,2)]
b.gp.hat=na.omit(read.table("~/Dropbox/AllGeneSNPStuff/max_beta_eQTL.table.txt"))[,-c(1,2)]
barplot(as.matrix(b.gp.hat[100,]))
barplot(as.matrix(t.j[100,]*s.j[100,]))
barplot(as.matrix(b.gp.hat[100,]))
barplot(as.matrix(t.j[100,]*s.j[100,]))
plot.func.t=function(j,posterior.means,lfsr.mat,marginal.var,s.j){
genesnpnames=rownames(posterior.means)
tissue.names=colnames(posterior.means)
R=ncol(posterior.means)
posterior.means=as.matrix(posterior.means)
s.j=as.matrix(s.j)
col.mat=NULL
for(r in 1:R){
if (lfsr.mat[j,r]<=0.10) {
col.mat[r]=1
} else if (lfsr.mat[j,r]<0.5) {
col.mat[r]=2
} else if (lfsr.mat[j,r]>=0.50) {
col.mat[r]=3
}
}
post.mean.converted=posterior.means[j,]*s.j[j,]
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
lfsr=lfsr.mat[j,]
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
mle=as.matrix(t.j[j,]*s.j[j,])
b=barplot(mle,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(mle)-0.05),(max(mle)+0.10)),cex.names=0.5,ylab="PosteriorMean")
}
tissue.specific=which(lfsr==max(lfsr),arr.ind=TRUE)
tissue.specific=which(lfsr==max(lfsr),arr.ind=TRUE)
(for i in 1:5){
plot.func.t(tissue.specific[1])}
for i in 1:5){
plot.func.t(tissue.specific[1])}
for (i in 1:5){
plot.func.t(tissue.specific[1])}
plot.func.t=function(j,posterior.means,lfsr.mat,marginal.var,s.j,t.j){
genesnpnames=rownames(posterior.means)
tissue.names=colnames(posterior.means)
R=ncol(posterior.means)
posterior.means=as.matrix(posterior.means)
s.j=as.matrix(s.j)
col.mat=NULL
for(r in 1:R){
if (lfsr.mat[j,r]<=0.10) {
col.mat[r]=1
} else if (lfsr.mat[j,r]<0.5) {
col.mat[r]=2
} else if (lfsr.mat[j,r]>=0.50) {
col.mat[r]=3
}
}
post.mean.converted=posterior.means[j,]*s.j[j,]
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
lfsr=lfsr.mat[j,]
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
mle=as.matrix(t.j[j,]*s.j[j,])
b=barplot(mle,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(mle)-0.05),(max(mle)+0.10)),cex.names=0.5,ylab="PosteriorMean")
}
tissue.specific=which(lfsr==max(lfsr),arr.ind=TRUE)
for (i in 1:5){
j=tissue.specific[i]
plot.func.t(j,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j=s.j,t.j)}
dim(lfsr)
i
tissue.specific[i,]
plot.func.t=function(j,posterior.means,lfsr.mat,marginal.var,s.j,t.j){
genesnpnames=rownames(posterior.means)
tissue.names=colnames(posterior.means)
R=ncol(posterior.means)
posterior.means=as.matrix(posterior.means)
s.j=as.matrix(s.j)
col.mat=NULL
for(r in 1:R){
if (lfsr.mat[j,r]<=0.10) {
col.mat[r]=1
} else if (lfsr.mat[j,r]<0.5) {
col.mat[r]=2
} else if (lfsr.mat[j,r]>=0.50) {
col.mat[r]=3
}
}
post.mean.converted=posterior.means[j,]*s.j[j,]
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
lfsr=lfsr.mat[j,]
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
mle=as.matrix(t.j[j,]*s.j[j,])
b=barplot(mle,main=paste0("b.hat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(mle)-0.05),(max(mle)+0.10)),cex.names=0.5,ylab="MLE")
}
tissue.specific=which(lfsr==max(lfsr),arr.ind=TRUE)
for (i in 1:5){
j=tissue.specific[i]
plot.func.t(j,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j=s.j,t.j)}
tissue.specific[j,]
tissue.specific[2]
tissue.specific[3]
length(tissue.specific)
for (i in 1:2){
j=tissue.specific[i]
plot.func.t(j,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j=s.j,t.j)}
tissue.specific
marginal.var[620,]
s.j[620,18]
s.j[620,19]
marginal.var[620,19]
marginal.var[620,19]*s.j[620,19]
post.mean.converted=posterior.means[j,]*s.j[j,]
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
lfsr=lfsr.mat[j,]
mean=as.numeric(post.mean.converted)
dim(post.mean.converted)
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
mar.sd.converted
j
j=620
post.mean.converted=posterior.means[j,]*s.j[j,]
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
mar.sd.converted
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
sd
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
class(post.mean.converted)
post.means.converted=as.matrix(post.mean.converted)
lfsr=lfsr.mat[j,]
mean=as.numeric(post.mean.converted)
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
mle=as.matrix(t.j[j,]*s.j[j,])
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
class(post.mean.converted)
post.mean.converted
post.mean.converted=as.matrix(post.mean.converted)
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
lfsr=lfsr.mat[j,]
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
mle=as.matrix(t.j[j,]*s.j[j,])
b=barplot(mle,main=paste0("b.hat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(mle)-0.05),(max(mle)+0.10)),cex.names=0.5,ylab="MLE")
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
lfsr=lfsr.mat[j,]
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
genesnpnames=rownames(posterior.means)
tissue.names=colnames(posterior.means)
R=ncol(posterior.means)
posterior.means=as.matrix(posterior.means)
s.j=as.matrix(s.j)
col.mat=NULL
for(r in 1:R){
if (lfsr.mat[j,r]<=0.10) {
col.mat[r]=1
} else if (lfsr.mat[j,r]<0.5) {
col.mat[r]=2
} else if (lfsr.mat[j,r]>=0.50) {
col.mat[r]=3
}
}
j
dim(post.means)
dim(posterior.means)
post.mean.converted=posterior.means[j,]*s.j[j,]
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
lfsr=lfsr.mat[j,]
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
post.mean.converted=posterior.means[j,]
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
t=as.numeric(levels(as.factor(col.mat)))
sd=as.numeric(marginal.var[j,])
dim(marginal.var)
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
plot.func.t=function(j,posterior.means,lfsr.mat,marginal.var,s.j,t.j){
genesnpnames=rownames(posterior.means)
tissue.names=colnames(posterior.means)
R=ncol(posterior.means)
posterior.means=as.matrix(posterior.means)
s.j=as.matrix(s.j)
col.mat=NULL
for(r in 1:R){
if (lfsr.mat[j,r]<=0.10) {
col.mat[r]=1
} else if (lfsr.mat[j,r]<0.5) {
col.mat[r]=2
} else if (lfsr.mat[j,r]>=0.50) {
col.mat[r]=3
}
}
post.mean.converted=posterior.means[j,]*s.j[j,]
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
post.mean.converted=posterior.means[j,]
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
lfsr=lfsr.mat[j,]
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
mle=as.matrix(t.j[j,]*s.j[j,])
b=barplot(mle,main=paste0("b.hat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(mle)-0.05),(max(mle)+0.10)),cex.names=0.5,ylab="MLE")
}
tissue.specific=which(lfsr==max(lfsr),arr.ind=TRUE)
for (i in 1:2){
j=tissue.specific[i]
plot.func.t(j,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j=s.j,t.j)}
j
dim(lfsr)
lfsr = read.table("lfsr.et_withbma.txt")
post.means=read.table("post.mean.et_withbma.txt")
se.gp.hat=na.omit(read.table("max_sebeta_eQTL.table.txt"))[,-c(1)]
s.j=se.gp.hat[,-1]#remove genesnpnames
t.stat=na.omit(read.table("max_tscore_eQTL.table.txt"))[,-c(1,47)]
t.j=t.stat[,-1]
marginal.var=read.table("../ET_model_stronggenesnps/marginal.var.et_withbma.txt")
setwd("~/gtex-viz/data/ET_model_stronggenesnps/")
lfsr = read.table("lfsr.et_withbma.txt")
post.means=read.table("post.mean.et_withbma.txt")
se.gp.hat=na.omit(read.table("max_sebeta_eQTL.table.txt"))[,-c(1)]
s.j=se.gp.hat[,-1]#remove genesnpnames
t.stat=na.omit(read.table("max_tscore_eQTL.table.txt"))[,-c(1,47)]
t.j=t.stat[,-1]
marginal.var=read.table("marginal.var.et_withbma.txt")
for (i in 1:2){
j=tissue.specific[i]
plot.func.t(j,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j=s.j,t.j)}
dim(lfsr)
tissue.specific
tissue.specific=which(lfsr==max(lfsr),arr.ind=TRUE)
tissue.specific
j=tissue.specific[i]
plot.func.t(j,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j=s.j,t.j)}
plot.func.t(j,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j=s.j,t.j)
j
i
tissue.specific=which(lfsr==max(lfsr),arr.ind=TRUE)[1]
plot.func.t(j,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j=s.j,t.j)
tissue.specific=which(lfsr==max(lfsr),arr.ind=TRUE)[1]
tissue.specific
plot.func.t(tissue.specific,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j=s.j,t.j)
barplot(t.stat[j,])
barplot(t.j[j,])
barplot(as.matrix(t.j[j,]))
j
j=620
barplot(as.matrix(t.j[j,]))
max.var=which.min(apply(lfsr,1,function(x){mean(x))}))
max.var=which.min(apply(lfsr,1,function(x){mean(x))})
max.var=which.min(apply(lfsr,1,function(x){mean(x))})
max.var=which.min(apply(lfsr,1,function(x){mean(x)}))
max.var
lfsr[2241,]
sum(lfsr==0)
l2=read.table("~/Dropbox/ET_all_trained_null//lfsr.et_withbma.txt")
dim(l2)
which(l2==min(l2))
a=which(l2==min(l2))
l2[a]
l2[1]
head(l2)
dim(l3)
dim(l2)
a
l2[a]
a=which(l2==min(l2),arr.ind=TRUE)
a
l2[15104,]
l2[a=which(l2==min(l2),arr.ind=TRUE),]
l2[a,]
l2[a]
length(a)
sum(l2==0)
sum(l2==0)+262
sum(lfsr==0)
dim(lfsr)
dim(a)
sum(l2==0)+131
head(l2)
dim(lfsr)
plot(l2[1,],lfsr[1,])
plot(as.matrix(l2[1,]),as.matrix(lfsr[1,]))
plot(as.matrix(l2[10,]),as.matrix(lfsr[10,]))
max.var=which.min(apply(lfsr,1,function(x){mean(x))})
max.var=which.min(apply(lfsr,1,function(x){mean(x)})
)
max.var
plot.func.t(max.var,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j=s.j,t.j)
posterior.means[2241,]
posterior.means[2241,]*s.j[2241,]
dim(s.j)
plot.func.t=function(j,posterior.means,lfsr.mat,marginal.var,s.j,t.j){
genesnpnames=rownames(posterior.means)
tissue.names=colnames(posterior.means)
R=ncol(posterior.means)
posterior.means=as.matrix(posterior.means)
s.j=as.matrix(s.j)
col.mat=NULL
for(r in 1:R){
if (lfsr.mat[j,r]<=0.10) {
col.mat[r]=1
} else if (lfsr.mat[j,r]<0.5) {
col.mat[r]=2
} else if (lfsr.mat[j,r]>=0.50) {
col.mat[r]=3
}
}
post.mean.converted=posterior.means[j,]*s.j[j,]
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
mle=as.matrix(t.j[j,]*s.j[j,])
bhat=barplot(mle,main=paste0("b.hat",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(mle)-0.05),(max(mle)+0.10)),cex.names=0.5,ylab="MLE")
t=barplot(as.matrix(t.j[j,]),main=paste0("t.stat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(t.j[j,])-0.05),(max(t.j[j,])+0.10)),cex.names=0.5,ylab="MLE")
}
max.var=which.min(apply(lfsr,1,function(x){mean(x)}))
plot.func.t(max.var,posterior.means = post.means,lfsr.mat = lfsr,marginal.var = marginal.var,s.j=s.j,t.j)
sqrt(marginal.var[max.var,])*s.j[max.var,]
j=2241
posterior.means=as.matrix(posterior.means)
s.j=as.matrix(s.j)
col.mat=NULL
for(r in 1:R){
if (lfsr.mat[j,r]<=0.10) {
col.mat[r]=1
} else if (lfsr.mat[j,r]<0.5) {
col.mat[r]=2
} else if (lfsr.mat[j,r]>=0.50) {
col.mat[r]=3
}
}
post.mean.converted=posterior.means[j,]*s.j[j,]
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
mar.sd.converted
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),(max(post.mean.converted)+0.10)),cex.names=0.5,ylab="PosteriorMean")
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
plot.func.neg
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=(c(0,min(post.mean.converted)-0.05)),cex.names=0.5,ylab="PosteriorMean")
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
mle=as.matrix(t.j[j,]*s.j[j,])
bhat=barplot(mle,main=paste0("b.hat",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(mle)-0.05),(max(mle)+0.10)),cex.names=0.5,ylab="MLE")
t=barplot(as.matrix(t.j[j,]),main=paste0("t.stat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(t.j[j,])-0.05),(max(t.j[j,])+0.10)),cex.names=0.5,ylab="MLE")
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=(c((min(post.mean.converted)-0.05),0),cex.names=0.5,ylab="PosteriorMean")
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),0),cex.names=0.5,ylab="PosteriorMean")
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
mle=as.matrix(t.j[j,]*s.j[j,])
bhat=barplot(mle,main=paste0("b.hat",genesnpnames[j]),names=tissue.names,las=2,ylim=c(0,(min(mle)-0.05)),cex.names=0.5,ylab="MLE")
t=barplot(as.matrix(t.j[j,]),main=paste0("t.stat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c(0,(min(t.j[j,])),cex.names=0.5,ylab="MLE")
bhat=barplot(mle,main=paste0("b.hat",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(mle)-0.05),0),cex.names=0.5,ylab="MLE")
t=barplot(as.matrix(t.j[j,]),main=paste0("t.stat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(t.j[j,]),0)),cex.names=0.5,ylab="MLE")
bhat=barplot(mle,main=paste0("b.hat",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(mle)-0.05),0),cex.names=0.5,ylab="MLE")
t=barplot(as.matrix(t.j[j,]),main=paste0("t.stat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(t.j[j,]),0)),cex.names=0.5,ylab="MLE")
t=barplot(as.matrix(t.j[j,]),main=paste0("t.stat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(t.j[j,],0)),cex.names=0.5,ylab="MLE")
t=barplot(as.matrix(t.j[j,]),main=paste0("t.stat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(t.j[j,],0))),cex.names=0.5,ylab="MLE")
t=barplot(as.matrix(t.j[j,]),main=paste0("t.stat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(t.j[j,]),0)),cex.names=0.5,ylab="MLE")
t=barplot(as.matrix(t.j[j,]),main=paste0("t.stat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c((min(t.j[j,]),0),cex.names=0.5,ylab="MLE")
t=barplot(as.matrix(t.j[j,]),main=paste0("t.stat,",genesnpnames[j]),names=tissue.names,las=2,ylim=c(min(t.j[j,]),0),cex.names=0.5,ylab="MLE")
post.mean.converted=posterior.means[j,]*s.j[j,]
mar.sd.converted=s.j[j,]*sqrt(marginal.var[j,])
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),0),cex.names=0.5,ylab="PosteriorMean")
b=barplot(post.mean.converted,main=paste0("PostTissueMeans,",genesnpnames[j]),names=tissue.names,col=col.mat,las=2,ylim=c((min(post.mean.converted)-0.05),0),cex.names=0.5,ylab="PosteriorMean")
mean=as.numeric(post.mean.converted)
sd=as.numeric(mar.sd.converted)
segments(b, mean - sd, b, mean + sd, lwd=2)
t=as.numeric(levels(as.factor(col.mat)))
key=c("<0.10","0.10<x<0.50",">0.5")
legend("topright",legend=key[t],col=t,pch=1,title="lfsr")
