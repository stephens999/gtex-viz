else {y=0;}
return(y)
})
length(indicator_lfsr[indicator_lfsr==1])
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
post.mean.shrink.tissue =post.mean.shrink[which(indicator_lfsr==1),];
plot(post.mean.shrink.tissue)
plot(post.mean.shrink.tissue,type="l")
iplot(post.mean.shrink.tissue)
iplot(post.mean.shrink.tissue,1:44)
iplot(t(post.mean.shrink.tissue),1:44)
dim(post.mean.shrink.tissue)
iplotCurves(post.mean.shrink.tissue,1:44)
index_tissue=which(tissue_names_filtered=="Cells_EBV-transformed_lymphocytes");
indicator_lfsr=apply(lfsr_data,1,function(x)
{
y=0;
if(x[index_tissue]<0.0001) {y=1;}
else {y=0;}
return(y)
})
length(indicator_lfsr[indicator_lfsr==1])
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
post.mean.shrink.tissue =post.mean.shrink[which(indicator_lfsr==1),];
iplotCurves(post.mean.shrink.tissue,1:44)
index_tissue=which(tissue_names_filtered=="Thyroid");
indicator_lfsr=apply(lfsr_data,1,function(x)
{
y=0;
if(x[index_tissue]<0.0001) {y=1;}
else {y=0;}
return(y)
})
length(indicator_lfsr[indicator_lfsr==1])
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
post.mean.shrink.tissue =post.mean.shrink[which(indicator_lfsr==1),];
iplotCurves(post.mean.shrink.tissue,1:44)
index_tissue=which(tissue_names_filtered=="Whole.Blood");
index_tissue=which(tissue_names_filtered=="Whole.Blood");
indicator_lfsr=apply(lfsr_data,1,function(x)
{
y=0;
if(x[index_tissue]<0.0001) {y=1;}
else {y=0;}
return(y)
})
length(indicator_lfsr[indicator_lfsr==1])
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
post.mean.shrink.tissue =post.mean.shrink[which(indicator_lfsr==1),];
iplotCurves(post.mean.shrink.tissue,1:44)
index_tissue=which(tissue_names_filtered=="Cells_EBV-transformed_lymphocytes");
indicator_lfsr=apply(lfsr_data,1,function(x)
{
y=0;
if(x[index_tissue]<0.0001) {y=1;}
else {y=0;}
return(y)
})
length(indicator_lfsr[indicator_lfsr==1])
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
post.mean.shrink.tissue =post.mean.shrink[which(indicator_lfsr==1),];
iplotCurves(post.mean.shrink.tissue,1:44)
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat=matrix(NA,ncol=ncol(lfsr),nrow=nrow(lfsr_data));
sigmat =lfsr_data <= thresh;
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat=matrix(NA,ncol=ncol(lfsr_data),nrow=nrow(lfsr_data));
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs
length(sigs)
sigs.it=which(lfsr[sigs,index_tissue]<thresh)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
length(sigs.it==1)
iplotCurves(post.mean.shrink[sigs.it,],1:44)
lfsr_data[sigs.it,]
head(lfsr_data[sigs.it,])
test=sigmat[sigs,18]
head(tst)
head(test)
which(test==true)
which(test==1)
goodguys=which(test==1)
goodguys
iplotCurves(post.mean.shrink[goodguys,],1:44)
hist(apply(lfsr_data,1,function(x){sum(x<=thresh)}))
goodguys
lfsr[718,]
lfsr_data[718,]
sigmat=matrix(NA,ncol=ncol(lfsr),nrow=nrow(lfsr))
for(i in 1:nrow(lfsr)){
for(j in 1:ncol(lfsr)){
sigmat[i,j]=(lfsr[i,j]<=thresh)
}
}
lfsr=lfsr_data
sigmat=matrix(NA,ncol=ncol(lfsr),nrow=nrow(lfsr))
for(i in 1:nrow(lfsr)){
for(j in 1:ncol(lfsr)){
sigmat[i,j]=(lfsr[i,j]<=thresh)
}
}
dim(sigmat)
sigs=which(rowSums(sigmat)==1)
head(sigmat)
dim(sigmat)
length(siga)
length(sigs)
sigs
lfsr[sigs,18]
which(sigmat[sigs,18]=1)
which(sigmat[sigs,18]=TRUE)
which(sigmat[sigs,18]==TRUE)
sigs
sigs
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
index_tissue=which(tissue_names_filtered=="Cells_EBV-transformed_lymphocytes");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
post.mean.shrink.tissue =post.mean.shrink[which(indic,];
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
index_tissue=which(tissue_names_filtered=="Cells_EBV-transformed_lymphocytes");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
index_tissue=which(tissue_names_filtered=="Whole.Blood");
index_tissue
tissue_names_filtered
index_tissue=which(tissue_names_filtered=="Whole_Blood");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
tissue_names_filtered
index_tissue=which(tissue_names_filtered=="Thyroid");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
index_tissue=which(tissue_names_filtered=="Testis");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
rowSums(sigmat)
tissue_names_filtered
tissue_names_filtered[7:16]
tissue_names_filtered[7:17]
tissue_names_filtered[6:17]
tissue_names_filtered[7:16]
index_tissue=7:16;
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==10)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
sigs.it
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
sigs=which(rowSums(sigmat)==8)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
index_tissue=7:16;
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==5)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
index_tissue=7:16;
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==10)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
dim(sigmat)
sigs=which(rowSums(sigmat[,7:16])==10)
sigs
length(sigs)
sigs=which(rowSums(sigmat[,7:16])==10 & rowSums(sigmat[,-(7:16)])==0)
length(sigs)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
rowSums(sigs)
(sigs)
rowsums(sigmat[sigs,])
rowSums(sigmat[sigs,])
index_tissue=1:44;
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==44);
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
index_tissue=1:44;
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==0);
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
sigs.it
index_tissue=1:44;
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==0);
length(sigs)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs[1:100],],1:44)
rowSums(sigmat)
rowSums(sigmat[sigs,])
table(rowSums(sigmat[sigs,]))
iplotCurves(post.mean.shrink[sigs[1:50],],1:44)
iplotCurves(post.mean.shrink[sigs[100:150],],1:44)
iplotCurves(post.mean.shrink[sigs[200:250],],1:44)
iplotCurves(post.mean.shrink[sigs[200:220],],1:44)
iplotCurves(post.mean.shrink[sigs[300:350],],1:44)
iplotCurves(post.mean.shrink[sigs,],1:44)
lfsr_red=apply(lfsr_data,1,function(x){c(x[1:6],min(x[7:16]),x[17:44])})
dim(lfsr_red)
lfsr_red=t(apply(lfsr_data,1,function(x){c(x[1:6],min(x[7:16]),x[17:44])}))
dim(lfsr_red)
head(lfsr_red)
index_tissue=7:16;
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
lfsr_red=t(apply(lfsr_data,1,function(x){c(x[1:6],min(x[7:16]),x[17:44])}))
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_red[sigs,index_tissue]<thresh)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
index_tissue=1:44;
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==44);
length(sigs)
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
iplotCurves(post.mean.shrink[sigs,],1:44)
gene_snp_names=read.table("../data/gene_snp_names.txt");
gene_snp_names=as.vector(as.matrix(read.table("../data/gene_snp_names.txt")));
length(gene_names_GTEX)
length(gene_snp_names)
gene_info_eqtl = data.frame(fread("../data/gene_info_eqtl.txt"));
dim(gene_info_eqtl)
gene_info_eqtl = data.frame(fread("../data/gene_info_eqtl.txt"));
genesnp.names=as.vector(as.matrix(read.table("../data/gene_snp_names.txt")));
gene_names_GTEX=substring(genesnp.names,1,15);
matching_labels_eqtls_to_gene_info= match(gene_names_GTEX,gene_info_eqtl[,1]);
index_not_found=which(is.na(matching_labels_eqtls_to_gene_info)==TRUE);
matching_labels=matching_labels_eqtls_to_gene_info[which(!is.na(matching_labels_eqtls_to_gene_info))];
flag=paste0(gene_info_eqtl[matching_labels,1],", ",
"name-",gene_info_eqtl$Associated.Gene.Name[matching_labels],", ",
"descr-",gene_info_eqtl$Description[matching_labels],",",
"chr-",gene_info_eqtl$Chromosome.Name[matching_labels]);
post.mean.shrink.matched=post.mean.shrink[-index_not_found,];
rownames(post.mean.shrink.matched)=flag;
dim(flag)
flag
length(flag)
lfsr_data.matched=lfsr_data[-index_not_found,];
dim(lfsr_data.matched)
cis_gene_data=read.table("../data/cis_gene_expression_per_tissue.txt");
colnames(cis_gene_data)
names_tissues <-  read.table("../data/names_tissues.txt")[-1];
tissue_names_filtered=unlist(lapply(as.matrix(names_tissues),
function(x) substring(x,32,nchar(x)-7)));
length(tissue_names_filtered)
tissue_names_filtered
tissue_expr.names=colnames(cis_gene_data);
match(tissue_names_filtered,tissue_expr.names)
tissue_names_filtered
tissue_expr.names
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44,cis_gene_data[sigs[sigs.it],],1:53)
dim(cis_gene_data)
cis_gene_data=read.table("../data/cis_gene_expression_per_tissue.txt");
tissue_expr.names=colnames(cis_gene_data);
names_tissues <-  read.table("../data/names_tissues.txt")[-1];
tissue_names_filtered=unlist(lapply(as.matrix(names_tissues),
function(x) substring(x,32,nchar(x)-7)));
lfsr_data=read.table("../data/lfsr.et_withbma.txt");
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
index_tissue=which(tissue_names_filtered=="Testis");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44,cis_gene_data[sigs[sigs.it],],1:53)
dim(cis_gene_data)
dim(post.mean.shrink
)
iplot(post.mean.shrink[sigs[sigs.it],],1:44,cis_gene_data[sigs[sigs.it],],1:53)
iplotCurves(cis_gene_data[sigs[sigs.it],],1:53);
iplotCurves(log(cis_gene_data[sigs[sigs.it],]+1),1:53);
iplotCurves(cis_gene_data[sigs[sigs.it],],1:53);
tissue_expr.names
iplotCurves(log(cis_gene_data[sigs[sigs.it],]+1),1:53);
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44);
iplotCurves(log(cis_gene_data[sigs[sigs.it],]+1),1:53);
index_tissue=which(tissue_names_filtered=="Whole_Blood");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44);
iplotCurves(log(cis_gene_data[sigs[sigs.it],]+1),1:53);
cis_gene_data[1,1:10]
cis_gene_data=read.table("../data/cis_gene_expression_per_tissue.txt");
tissue_expr.names=colnames(cis_gene_data);
names_tissues <-  read.table("../data/names_tissues.txt")[-1];
tissue_names_filtered=unlist(lapply(as.matrix(names_tissues),
function(x) substring(x,32,nchar(x)-7)));
lfsr_data=read.table("../data/lfsr.et_withbma.txt");
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
index_tissue=which(tissue_names_filtered=="Whole_Blood");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44);
iplotCurves(cis_gene_data[sigs[sigs.it],],1:53);
iplotCurves(log(cis_gene_data[sigs[sigs.it],]+1),1:53);
tissue_expr.names
index_tissue=which(tissue_names_filtered=="Testis");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44);
iplotCurves(log(cis_gene_data[sigs[sigs.it],]+1),1:53);
iplotCurves(cis_gene_data[sigs[sigs.it],],1:53);
sigs[sigs.it]
length(sigs[sigs.it])
iplotCurves(post.mean.shrink[sigs[sigs.it[1:100]],],1:44);
iplotCurves(cis_gene_data[sigs[sigs.it[1:100]],],1:53);
iplotCurves(cis_gene_data[sigs[sigs.it[100:200]],],1:53);
iplotCurves(cis_gene_data[sigs[sigs.it[200:300]],],1:53);
iplotCurves(cis_gene_data[sigs[sigs.it[300:400]],],1:53);
cis_gene_data_mod=max(cis_gene_data,5000);
iplotCurves(cis_gene_data_mod[sigs[sigs.it[300:400]],],1:53);
cis_gene_data_mod=apply(cis_gene_data,c(1,2),function(x) max(x,5000));
iplotCurves(cis_gene_data_mod[sigs[sigs.it[300:400]],],1:53);
tissue_expr.names
cis_gene_data_mod=apply(cis_gene_data,c(1,2),function(x) min(x,5000));
iplotCurves(cis_gene_data_mod[sigs[sigs.it[300:400]],],1:53);
iplotCurves(log(cis_gene_data_mod[sigs[sigs.it[300:400]],]),1:53);
iplotCurves(log(cis_gene_data[sigs[sigs.it],]),1:53);
rownames(post.mean.shrink)=genesnp.names;
length(genesnp.names)
rownames(post.mean.shrink)=genesnp.names;
rownames(cis_gene_data)=genesnp.names;
tissue_expr.names
cis_gene_data=read.table("../data/cis_gene_expression_per_tissue.txt");
cis_gene_data[1,]
cis_gene_data[1,1]
genesnp.names=as.vector(as.matrix(read.table("../data/gene_snp_names.txt")));
length(genesnp.names)
genesnp.names[1]
gene_names_eqtl=apply(genesnp.names,1,function(x) substring(x,1,15));
gene_names_eqtl=lapply(genesnp.names,1,function(x) substring(x,1,15));
gene_names_eqtl=lapply(genesnp.names,function(x) substring(x,1,15));
gene_names_eqtl
gene_names_eqtl=unlist(lapply(genesnp.names,function(x) substring(x,1,15)));
cis_gene_data.frame=data.frame(cbind(gene_names_eqtl,cis_gene_data));
cis_gene_data.frame[1,]
cis_gene_data.frame[1,1:5]
write.table(cis_gene_data.frame,"../data/cis_gene_expression_per_tissue.txt");
cis_gene_data=read.table("../data/cis_gene_expression_per_tissue.txt");
dim(cis_gene_data)
cis_gene_data=read.table("../data/cis_gene_expression_per_tissue.txt")[,-1];
data=read.table("../data/complete_tscore_eQTL.table.txt");
data[1,1]
dim(data)
temp=data[,-1];
tscore_data=read.table("../data/complete_tscore_eQTL.table.txt");
iplotcurves(tscore_data[,-1],1:44);
iplotCurves(tscore_data[,-1],1:44);
iplotCurves(tscore_data[1:1000,-1],1:44);
iplotCurves(tscore_data[1:3000,-1],1:44);
cis_gene_data=read.table("../data/cis_gene_expression_per_tissue.txt")[,-1];
genesnp.names=as.vector(as.matrix(read.table("../data/gene_snp_names.txt")));
#gene_names_eqtl=unlist(lapply(genesnp.names,function(x) substring(x,1,15)));
tissue_expr.names=colnames(cis_gene_data);
names_tissues <-  read.table("../data/names_tissues.txt")[-1];
tissue_names_filtered=unlist(lapply(as.matrix(names_tissues),
function(x) substring(x,32,nchar(x)-7)));
lfsr_data=read.table("../data/lfsr.et_withbma.txt");
post.mean.shrink = read.table("../data/post.mean.et_withbma.normalized.txt");
rownames(post.mean.shrink)=genesnp.names;
rownames(cis_gene_data)=genesnp.names;
L2norm = function(x){return(sqrt(sum(x^2)))}
norm_effects = function(m,standardize=TRUE){
max_pos = apply(m,1,max)
max_neg = apply(-m,1,max)
max_sign = ifelse(max_pos>max_neg, 1,-1) #find the sign of the largest effect
if(standardize){max_sign=max_sign* apply(m,1,L2norm)}
m/max_sign
}
cis_gene_data_normalized=norm_effects(log(cis_gene_data+1));
index_tissue=which(tissue_names_filtered=="Testis");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
#cis_gene_data_mod=apply(cis_gene_data,c(1,2),function(x) min(x,5000));
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44);
iplotCurves(log(cis_gene_data_normalized[sigs[sigs.it],]),1:53);
iplotCurves(cis_gene_data_normalized[sigs[sigs.it],],1:53);
tissue_names_filtered
index_tissue=which(tissue_names_filtered=="Whole_Blood");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
#cis_gene_data_mod=apply(cis_gene_data,c(1,2),function(x) min(x,5000));
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44);
iplotCurves(cis_gene_data_normalized[sigs[sigs.it],],1:53);
index_tissue=which(tissue_names_filtered=="Thyroid");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
#cis_gene_data_mod=apply(cis_gene_data,c(1,2),function(x) min(x,5000));
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44);
iplotCurves(cis_gene_data_normalized[sigs[sigs.it],],1:53);
sigs[sigs.it]
length(sigs[sigs.it])
tissue_names_expr_data=unique(read.table("../data/samples_id.txt")[,3])
tissue_expr.names
index_tissue=which(tissue_names_filtered=="Pituitary");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
#cis_gene_data_mod=apply(cis_gene_data,c(1,2),function(x) min(x,5000));
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44);
iplotCurves(cis_gene_data_normalized[sigs[sigs.it],],1:53);
tissue_names_filtered[18]
index_tissue=which(tissue_names_filtered=="Cells_EBV-transformed_lymphocytes");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
#cis_gene_data_mod=apply(cis_gene_data,c(1,2),function(x) min(x,5000));
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44);
iplotCurves(cis_gene_data_normalized[sigs[sigs.it],],1:53);
tissue_expr.names
tissue_names_filtered
index_tissue=which(tissue_names_filtered=="Pancreas");
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_data[sigs,index_tissue]<thresh)
#cis_gene_data_mod=apply(cis_gene_data,c(1,2),function(x) min(x,5000));
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44);
iplotCurves(cis_gene_data_normalized[sigs[sigs.it],],1:53);
tissue_expr.names
index_tissue=7:16;
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data.matched <= thresh;
lfsr_red=t(apply(lfsr_data.matched,1,function(x){c(x[1:6],min(x[7:16]),x[17:44])}))
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_red[sigs,index_tissue]<thresh)
iplotCurves(post.mean.shrink.matched[sigs[sigs.it],],1:44)
iplotCurves(cis_gene_data_normalized[sigs[sigs.it],],1:53);
index_tissue=7:16;
thresh=0.05
##create a matrix showing whether or no lfsr satisfies threshold
sigmat =lfsr_data <= thresh;
lfsr_red=t(apply(lfsr_data,1,function(x){c(x[1:6],min(x[7:16]),x[17:44])}))
sigs=which(rowSums(sigmat)==1)
sigs.it=which(lfsr_red[sigs,index_tissue]<thresh)
iplotCurves(post.mean.shrink[sigs[sigs.it],],1:44)
iplotCurves(cis_gene_data_normalized[sigs[sigs.it],],1:53);
tissue_expr.names
